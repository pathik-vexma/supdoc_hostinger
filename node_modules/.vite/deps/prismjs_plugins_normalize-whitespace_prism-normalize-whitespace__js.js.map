{
  "version": 3,
  "sources": ["../../prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js"],
  "sourcesContent": ["(function () {\r\n\r\n\tif (typeof Prism === 'undefined') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar assign = Object.assign || function (obj1, obj2) {\r\n\t\tfor (var name in obj2) {\r\n\t\t\tif (obj2.hasOwnProperty(name)) {\r\n\t\t\t\tobj1[name] = obj2[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj1;\r\n\t};\r\n\r\n\tfunction NormalizeWhitespace(defaults) {\r\n\t\tthis.defaults = assign({}, defaults);\r\n\t}\r\n\r\n\tfunction toCamelCase(value) {\r\n\t\treturn value.replace(/-(\\w)/g, function (match, firstChar) {\r\n\t\t\treturn firstChar.toUpperCase();\r\n\t\t});\r\n\t}\r\n\r\n\tfunction tabLen(str) {\r\n\t\tvar res = 0;\r\n\t\tfor (var i = 0; i < str.length; ++i) {\r\n\t\t\tif (str.charCodeAt(i) == '\\t'.charCodeAt(0)) {\r\n\t\t\t\tres += 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.length + res;\r\n\t}\r\n\r\n\tvar settingsConfig = {\r\n\t\t'remove-trailing': 'boolean',\r\n\t\t'remove-indent': 'boolean',\r\n\t\t'left-trim': 'boolean',\r\n\t\t'right-trim': 'boolean',\r\n\t\t'break-lines': 'number',\r\n\t\t'indent': 'number',\r\n\t\t'remove-initial-line-feed': 'boolean',\r\n\t\t'tabs-to-spaces': 'number',\r\n\t\t'spaces-to-tabs': 'number',\r\n\t};\r\n\r\n\tNormalizeWhitespace.prototype = {\r\n\t\tsetDefaults: function (defaults) {\r\n\t\t\tthis.defaults = assign(this.defaults, defaults);\r\n\t\t},\r\n\t\tnormalize: function (input, settings) {\r\n\t\t\tsettings = assign(this.defaults, settings);\r\n\r\n\t\t\tfor (var name in settings) {\r\n\t\t\t\tvar methodName = toCamelCase(name);\r\n\t\t\t\tif (name !== 'normalize' && methodName !== 'setDefaults' &&\r\n\t\t\t\t\tsettings[name] && this[methodName]) {\r\n\t\t\t\t\tinput = this[methodName].call(this, input, settings[name]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn input;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Normalization methods\r\n\t\t */\r\n\t\tleftTrim: function (input) {\r\n\t\t\treturn input.replace(/^\\s+/, '');\r\n\t\t},\r\n\t\trightTrim: function (input) {\r\n\t\t\treturn input.replace(/\\s+$/, '');\r\n\t\t},\r\n\t\ttabsToSpaces: function (input, spaces) {\r\n\t\t\tspaces = spaces|0 || 4;\r\n\t\t\treturn input.replace(/\\t/g, new Array(++spaces).join(' '));\r\n\t\t},\r\n\t\tspacesToTabs: function (input, spaces) {\r\n\t\t\tspaces = spaces|0 || 4;\r\n\t\t\treturn input.replace(RegExp(' {' + spaces + '}', 'g'), '\\t');\r\n\t\t},\r\n\t\tremoveTrailing: function (input) {\r\n\t\t\treturn input.replace(/\\s*?$/gm, '');\r\n\t\t},\r\n\t\t// Support for deprecated plugin remove-initial-line-feed\r\n\t\tremoveInitialLineFeed: function (input) {\r\n\t\t\treturn input.replace(/^(?:\\r?\\n|\\r)/, '');\r\n\t\t},\r\n\t\tremoveIndent: function (input) {\r\n\t\t\tvar indents = input.match(/^[^\\S\\n\\r]*(?=\\S)/gm);\r\n\r\n\t\t\tif (!indents || !indents[0].length) {\r\n\t\t\t\treturn input;\r\n\t\t\t}\r\n\r\n\t\t\tindents.sort(function (a, b) { return a.length - b.length; });\r\n\r\n\t\t\tif (!indents[0].length) {\r\n\t\t\t\treturn input;\r\n\t\t\t}\r\n\r\n\t\t\treturn input.replace(RegExp('^' + indents[0], 'gm'), '');\r\n\t\t},\r\n\t\tindent: function (input, tabs) {\r\n\t\t\treturn input.replace(/^[^\\S\\n\\r]*(?=\\S)/gm, new Array(++tabs).join('\\t') + '$&');\r\n\t\t},\r\n\t\tbreakLines: function (input, characters) {\r\n\t\t\tcharacters = (characters === true) ? 80 : characters|0 || 80;\r\n\r\n\t\t\tvar lines = input.split('\\n');\r\n\t\t\tfor (var i = 0; i < lines.length; ++i) {\r\n\t\t\t\tif (tabLen(lines[i]) <= characters) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar line = lines[i].split(/(\\s+)/g);\r\n\t\t\t\tvar len = 0;\r\n\r\n\t\t\t\tfor (var j = 0; j < line.length; ++j) {\r\n\t\t\t\t\tvar tl = tabLen(line[j]);\r\n\t\t\t\t\tlen += tl;\r\n\t\t\t\t\tif (len > characters) {\r\n\t\t\t\t\t\tline[j] = '\\n' + line[j];\r\n\t\t\t\t\t\tlen = tl;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlines[i] = line.join('');\r\n\t\t\t}\r\n\t\t\treturn lines.join('\\n');\r\n\t\t}\r\n\t};\r\n\r\n\t// Support node modules\r\n\tif (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = NormalizeWhitespace;\r\n\t}\r\n\r\n\tPrism.plugins.NormalizeWhitespace = new NormalizeWhitespace({\r\n\t\t'remove-trailing': true,\r\n\t\t'remove-indent': true,\r\n\t\t'left-trim': true,\r\n\t\t'right-trim': true,\r\n\t\t/*'break-lines': 80,\r\n\t\t'indent': 2,\r\n\t\t'remove-initial-line-feed': false,\r\n\t\t'tabs-to-spaces': 4,\r\n\t\t'spaces-to-tabs': 4*/\r\n\t});\r\n\r\n\tPrism.hooks.add('before-sanity-check', function (env) {\r\n\t\tvar Normalizer = Prism.plugins.NormalizeWhitespace;\r\n\r\n\t\t// Check settings\r\n\t\tif (env.settings && env.settings['whitespace-normalization'] === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check classes\r\n\t\tif (!Prism.util.isActive(env.element, 'whitespace-normalization', true)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Simple mode if there is no env.element\r\n\t\tif ((!env.element || !env.element.parentNode) && env.code) {\r\n\t\t\tenv.code = Normalizer.normalize(env.code, env.settings);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Normal mode\r\n\t\tvar pre = env.element.parentNode;\r\n\t\tif (!env.code || !pre || pre.nodeName.toLowerCase() !== 'pre') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (env.settings == null) { env.settings = {}; }\r\n\r\n\t\t// Read settings from 'data-' attributes\r\n\t\tfor (var key in settingsConfig) {\r\n\t\t\tif (Object.hasOwnProperty.call(settingsConfig, key)) {\r\n\t\t\t\tvar settingType = settingsConfig[key];\r\n\t\t\t\tif (pre.hasAttribute('data-' + key)) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar value = JSON.parse(pre.getAttribute('data-' + key) || 'true');\r\n\t\t\t\t\t\tif (typeof value === settingType) {\r\n\t\t\t\t\t\t\tenv.settings[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (_error) {\r\n\t\t\t\t\t\t// ignore error\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar children = pre.childNodes;\r\n\t\tvar before = '';\r\n\t\tvar after = '';\r\n\t\tvar codeFound = false;\r\n\r\n\t\t// Move surrounding whitespace from the <pre> tag into the <code> tag\r\n\t\tfor (var i = 0; i < children.length; ++i) {\r\n\t\t\tvar node = children[i];\r\n\r\n\t\t\tif (node == env.element) {\r\n\t\t\t\tcodeFound = true;\r\n\t\t\t} else if (node.nodeName === '#text') {\r\n\t\t\t\tif (codeFound) {\r\n\t\t\t\t\tafter += node.nodeValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbefore += node.nodeValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpre.removeChild(node);\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!env.element.children.length || !Prism.plugins.KeepMarkup) {\r\n\t\t\tenv.code = before + env.code + after;\r\n\t\t\tenv.code = Normalizer.normalize(env.code, env.settings);\r\n\t\t} else {\r\n\t\t\t// Preserve markup for keep-markup plugin\r\n\t\t\tvar html = before + env.element.innerHTML + after;\r\n\t\t\tenv.element.innerHTML = Normalizer.normalize(html, env.settings);\r\n\t\t\tenv.code = env.element.textContent;\r\n\t\t}\r\n\t});\r\n\r\n}());\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,WAAY;AAEZ,UAAI,OAAO,UAAU,aAAa;AACjC;AAAA,MACD;AAEA,UAAI,SAAS,OAAO,UAAU,SAAU,MAAM,MAAM;AACnD,iBAAS,QAAQ,MAAM;AACtB,cAAI,KAAK,eAAe,IAAI,GAAG;AAC9B,iBAAK,IAAI,IAAI,KAAK,IAAI;AAAA,UACvB;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAEA,eAAS,oBAAoB,UAAU;AACtC,aAAK,WAAW,OAAO,CAAC,GAAG,QAAQ;AAAA,MACpC;AAEA,eAAS,YAAY,OAAO;AAC3B,eAAO,MAAM,QAAQ,UAAU,SAAU,OAAO,WAAW;AAC1D,iBAAO,UAAU,YAAY;AAAA,QAC9B,CAAC;AAAA,MACF;AAEA,eAAS,OAAO,KAAK;AACpB,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACpC,cAAI,IAAI,WAAW,CAAC,KAAK,IAAK,WAAW,CAAC,GAAG;AAC5C,mBAAO;AAAA,UACR;AAAA,QACD;AACA,eAAO,IAAI,SAAS;AAAA,MACrB;AAEA,UAAI,iBAAiB;AAAA,QACpB,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,cAAc;AAAA,QACd,eAAe;AAAA,QACf,UAAU;AAAA,QACV,4BAA4B;AAAA,QAC5B,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,MACnB;AAEA,0BAAoB,YAAY;AAAA,QAC/B,aAAa,SAAU,UAAU;AAChC,eAAK,WAAW,OAAO,KAAK,UAAU,QAAQ;AAAA,QAC/C;AAAA,QACA,WAAW,SAAU,OAAO,UAAU;AACrC,qBAAW,OAAO,KAAK,UAAU,QAAQ;AAEzC,mBAAS,QAAQ,UAAU;AAC1B,gBAAI,aAAa,YAAY,IAAI;AACjC,gBAAI,SAAS,eAAe,eAAe,iBAC1C,SAAS,IAAI,KAAK,KAAK,UAAU,GAAG;AACpC,sBAAQ,KAAK,UAAU,EAAE,KAAK,MAAM,OAAO,SAAS,IAAI,CAAC;AAAA,YAC1D;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA;AAAA,QAKA,UAAU,SAAU,OAAO;AAC1B,iBAAO,MAAM,QAAQ,QAAQ,EAAE;AAAA,QAChC;AAAA,QACA,WAAW,SAAU,OAAO;AAC3B,iBAAO,MAAM,QAAQ,QAAQ,EAAE;AAAA,QAChC;AAAA,QACA,cAAc,SAAU,OAAO,QAAQ;AACtC,mBAAS,SAAO,KAAK;AACrB,iBAAO,MAAM,QAAQ,OAAO,IAAI,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC;AAAA,QAC1D;AAAA,QACA,cAAc,SAAU,OAAO,QAAQ;AACtC,mBAAS,SAAO,KAAK;AACrB,iBAAO,MAAM,QAAQ,OAAO,OAAO,SAAS,KAAK,GAAG,GAAG,GAAI;AAAA,QAC5D;AAAA,QACA,gBAAgB,SAAU,OAAO;AAChC,iBAAO,MAAM,QAAQ,WAAW,EAAE;AAAA,QACnC;AAAA;AAAA,QAEA,uBAAuB,SAAU,OAAO;AACvC,iBAAO,MAAM,QAAQ,iBAAiB,EAAE;AAAA,QACzC;AAAA,QACA,cAAc,SAAU,OAAO;AAC9B,cAAI,UAAU,MAAM,MAAM,qBAAqB;AAE/C,cAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,QAAQ;AACnC,mBAAO;AAAA,UACR;AAEA,kBAAQ,KAAK,SAAU,GAAG,GAAG;AAAE,mBAAO,EAAE,SAAS,EAAE;AAAA,UAAQ,CAAC;AAE5D,cAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ;AACvB,mBAAO;AAAA,UACR;AAEA,iBAAO,MAAM,QAAQ,OAAO,MAAM,QAAQ,CAAC,GAAG,IAAI,GAAG,EAAE;AAAA,QACxD;AAAA,QACA,QAAQ,SAAU,OAAO,MAAM;AAC9B,iBAAO,MAAM,QAAQ,uBAAuB,IAAI,MAAM,EAAE,IAAI,EAAE,KAAK,GAAI,IAAI,IAAI;AAAA,QAChF;AAAA,QACA,YAAY,SAAU,OAAO,YAAY;AACxC,uBAAc,eAAe,OAAQ,KAAK,aAAW,KAAK;AAE1D,cAAI,QAAQ,MAAM,MAAM,IAAI;AAC5B,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACtC,gBAAI,OAAO,MAAM,CAAC,CAAC,KAAK,YAAY;AACnC;AAAA,YACD;AAEA,gBAAI,OAAO,MAAM,CAAC,EAAE,MAAM,QAAQ;AAClC,gBAAI,MAAM;AAEV,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACrC,kBAAI,KAAK,OAAO,KAAK,CAAC,CAAC;AACvB,qBAAO;AACP,kBAAI,MAAM,YAAY;AACrB,qBAAK,CAAC,IAAI,OAAO,KAAK,CAAC;AACvB,sBAAM;AAAA,cACP;AAAA,YACD;AACA,kBAAM,CAAC,IAAI,KAAK,KAAK,EAAE;AAAA,UACxB;AACA,iBAAO,MAAM,KAAK,IAAI;AAAA,QACvB;AAAA,MACD;AAGA,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACpD,eAAO,UAAU;AAAA,MAClB;AAEA,YAAM,QAAQ,sBAAsB,IAAI,oBAAoB;AAAA,QAC3D,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMf,CAAC;AAED,YAAM,MAAM,IAAI,uBAAuB,SAAU,KAAK;AACrD,YAAI,aAAa,MAAM,QAAQ;AAG/B,YAAI,IAAI,YAAY,IAAI,SAAS,0BAA0B,MAAM,OAAO;AACvE;AAAA,QACD;AAGA,YAAI,CAAC,MAAM,KAAK,SAAS,IAAI,SAAS,4BAA4B,IAAI,GAAG;AACxE;AAAA,QACD;AAGA,aAAK,CAAC,IAAI,WAAW,CAAC,IAAI,QAAQ,eAAe,IAAI,MAAM;AAC1D,cAAI,OAAO,WAAW,UAAU,IAAI,MAAM,IAAI,QAAQ;AACtD;AAAA,QACD;AAGA,YAAI,MAAM,IAAI,QAAQ;AACtB,YAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,IAAI,SAAS,YAAY,MAAM,OAAO;AAC9D;AAAA,QACD;AAEA,YAAI,IAAI,YAAY,MAAM;AAAE,cAAI,WAAW,CAAC;AAAA,QAAG;AAG/C,iBAAS,OAAO,gBAAgB;AAC/B,cAAI,OAAO,eAAe,KAAK,gBAAgB,GAAG,GAAG;AACpD,gBAAI,cAAc,eAAe,GAAG;AACpC,gBAAI,IAAI,aAAa,UAAU,GAAG,GAAG;AACpC,kBAAI;AACH,oBAAI,QAAQ,KAAK,MAAM,IAAI,aAAa,UAAU,GAAG,KAAK,MAAM;AAChE,oBAAI,OAAO,UAAU,aAAa;AACjC,sBAAI,SAAS,GAAG,IAAI;AAAA,gBACrB;AAAA,cACD,SAAS,QAAQ;AAAA,cAEjB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,YAAI,WAAW,IAAI;AACnB,YAAI,SAAS;AACb,YAAI,QAAQ;AACZ,YAAI,YAAY;AAGhB,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACzC,cAAI,OAAO,SAAS,CAAC;AAErB,cAAI,QAAQ,IAAI,SAAS;AACxB,wBAAY;AAAA,UACb,WAAW,KAAK,aAAa,SAAS;AACrC,gBAAI,WAAW;AACd,uBAAS,KAAK;AAAA,YACf,OAAO;AACN,wBAAU,KAAK;AAAA,YAChB;AAEA,gBAAI,YAAY,IAAI;AACpB,cAAE;AAAA,UACH;AAAA,QACD;AAEA,YAAI,CAAC,IAAI,QAAQ,SAAS,UAAU,CAAC,MAAM,QAAQ,YAAY;AAC9D,cAAI,OAAO,SAAS,IAAI,OAAO;AAC/B,cAAI,OAAO,WAAW,UAAU,IAAI,MAAM,IAAI,QAAQ;AAAA,QACvD,OAAO;AAEN,cAAI,OAAO,SAAS,IAAI,QAAQ,YAAY;AAC5C,cAAI,QAAQ,YAAY,WAAW,UAAU,MAAM,IAAI,QAAQ;AAC/D,cAAI,OAAO,IAAI,QAAQ;AAAA,QACxB;AAAA,MACD,CAAC;AAAA,IAEF,GAAE;AAAA;AAAA;",
  "names": []
}
